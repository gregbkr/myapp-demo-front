---
AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  GitHubRepo:
    Description: Github repository name
    Type: String
    Default: "https://github.com/gregbkr/myapp-gatsby-front"
  GitHubToken:
      Description: Github token to get the code
      Type: String
      Default: "TO_BE_DEFINED"
  Dns:
    Description: Dns name for the front, and bucket name
    Type: String
    Default: "myapp-demo.cloudlabs.link"
  HostedZoneName:
    Description: HostedZoneName for the DNS
    Type: String
    Default: "cloudlabs.link." 
  CertArn:
    Description: Arn of the certificate serving the DNS
    Type: String
    Default: "arn:aws:acm:us-east-1:282835178041:certificate/9145b208-9608-4d34-be52-2e5f0061a123" 

Resources:

  S3BucketFront:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref Dns
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    DeletionPolicy: Retain

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref S3BucketFront
                - /*
      Bucket: !Ref S3BucketFront
               
  Project:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref AWS::StackName
      Description: CodeBuild created via cloudformation
      ServiceRole: !Ref 'CodeBuildRole'
      Artifacts:
        Type: no_artifacts
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
      Source:
        Location: !Ref GitHubRepo
        Type: GITHUB
        Auth:
          Resource: !Ref CodeBuildSourceCredential
          Type: OAUTH
        Auth: 
          Type: OAUTH
          Resource: !Ref CodeBuildSourceCredential
        BuildSpec: !Sub |
          version: 0.2
          env:
            variables:
              BUCKET_NAME: ${Dns}
              GATSBY_ENV_VAR: "Value from the buildspec..."
            parameter-store:
              GATSBY_API_URL: "/master/myapp/api_url"
              GATSBY_API_KEY: "/master/myapp/api_key"
          phases:
            install:
              runtime-versions:
                python: 3.8
                nodejs: 12
              commands:
                - BRANCH=$(echo "$CODEBUILD_WEBHOOK_TRIGGER" | sed 's/branch\///g')
                - env
                - npm --version
                - pip3 install awscli --upgrade
            build:
              commands:
                - npm install
                - ./node_modules/.bin/gatsby build --prefix-paths
            post_build:
              commands:
                - aws s3 cp public s3://$BUCKET_NAME --recursive
          cache:
            paths:
              - node_modules
      TimeoutInMinutes: 10
      Tags:
        - Key: Key1
          Value: Value1
        - Key: Key2
          Value: Value2
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: ^refs/heads/develop$
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: ^refs/heads/master$

  CodeBuildSourceCredential:
    Type: AWS::CodeBuild::SourceCredential
    Properties:
      AuthType: PERSONAL_ACCESS_TOKEN
      ServerType: GITHUB
      Token: !Ref GitHubToken

  CodeBuildRole:
    Description: serverless demo hello role in IAM for AWS CodeBuild
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
      Path: /
      RoleName: !Ref AWS::StackName
    Type: AWS::IAM::Role

  CodeBuildPolicy:
    Description: Setting IAM policy for service role for CodeBuild
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - logs:*
          - s3:*
          - codebuild:*
          - ssm:GetParameters
          Effect: Allow
          Resource: '*'
      PolicyName: !Ref AWS::StackName
      Roles:
      - !Ref 'CodeBuildRole'
    Type: AWS::IAM::Policy

  #Cloudfront
  myDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        HttpVersion: http2
        Origins:
        - DomainName: !Sub "${Dns}.s3-website-eu-west-1.amazonaws.com"  
          Id: s3-website
          CustomOriginConfig:
            OriginProtocolPolicy: http-only
        Enabled: 'true'
        Comment: My app demo
        DefaultRootObject: index.html
        # Logging:
        #   IncludeCookies: 'false'
        #   Bucket: mylogs.s3.amazonaws.com
        #   Prefix: myprefix
        Aliases:
        - !Ref Dns
        DefaultCacheBehavior:
          AllowedMethods:
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          TargetOriginId: s3-website
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_200
        ViewerCertificate:
          AcmCertificateArn: !Ref CertArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.1_2016

  # DNS
  myDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Ref HostedZoneName
      Comment: DNS name pointing to Cloudfront
      Name: !Ref Dns
      Type: A
      AliasTarget: 
        DNSName: !GetAtt myDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2

Outputs:
  WebsiteURL:
    Value: !GetAtt 
      - S3BucketFront
      - WebsiteURL
    Description: URL for website hosted on S3
  S3BucketSecureURL:
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - S3BucketFront
          - DomainName
    Description: Name of S3 bucket to hold website content
  CloudFrontDomain:
    Value: !GetAtt
      - myDistribution
      - DomainName